{"ast":null,"code":"var _jsxFileName = \"/home/ivan/Sites/reactCourse/maxCourse/frontend/src/App.js\";\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage.js\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage.js\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage.js\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage.js\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport { RouterProvider, createBrowserRouter } from 'react-router-dom';\nimport HomePage from \"./pages/HomePage\";\nimport EventsPage from \"./pages/EventsPage\";\nimport EventDetailPage from \"./pages/EventDetailPage\";\nimport NewEventPage from \"./pages/NewEventPage\";\nimport EditEventPage from \"./pages/EditEventPage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst router = createBrowserRouter([{\n  path: '/',\n  element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 24\n  }, this)\n}, {\n  path: '/events',\n  element: /*#__PURE__*/_jsxDEV(EventsPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 30\n  }, this)\n}, {\n  path: '/events/:id',\n  element: /*#__PURE__*/_jsxDEV(EventDetailPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 34\n  }, this)\n}, {\n  path: '/events/new',\n  element: /*#__PURE__*/_jsxDEV(NewEventPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 34\n  }, this)\n}, {\n  path: '/events/:id/edit',\n  element: /*#__PURE__*/_jsxDEV(EditEventPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 39\n  }, this)\n}]);\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["RouterProvider","createBrowserRouter","HomePage","EventsPage","EventDetailPage","NewEventPage","EditEventPage","router","path","element","App"],"sources":["/home/ivan/Sites/reactCourse/maxCourse/frontend/src/App.js"],"sourcesContent":["// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage.js\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage.js\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage.js\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage.js\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport { RouterProvider, createBrowserRouter} from 'react-router-dom'\nimport HomePage from \"./pages/HomePage\";\nimport EventsPage from \"./pages/EventsPage\";\nimport EventDetailPage from \"./pages/EventDetailPage\";\nimport NewEventPage from \"./pages/NewEventPage\";\nimport EditEventPage from \"./pages/EditEventPage\";\n\nconst router = createBrowserRouter([\n    {path:'/',element: <HomePage/>},\n    {path:'/events',element: <EventsPage/>},\n    {path:'/events/:id',element: <EventDetailPage/>},\n    {path:'/events/new',element: <NewEventPage/>},\n    {path:'/events/:id/edit',element: <EditEventPage/>}\n])\n\nfunction App() {\n  return <RouterProvider router={router}/>;\n}\n\nexport default App;\n"],"mappings":";AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,cAAc,EAAEC,mBAAmB,QAAO,kBAAkB;AACrE,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,UAAU,MAAM,oBAAoB;AAC3C,OAAOC,eAAe,MAAM,yBAAyB;AACrD,OAAOC,YAAY,MAAM,sBAAsB;AAC/C,OAAOC,aAAa,MAAM,uBAAuB;AAAC;AAElD,MAAMC,MAAM,GAAGN,mBAAmB,CAAC,CAC/B;EAACO,IAAI,EAAC,GAAG;EAACC,OAAO,eAAE,QAAC,QAAQ;IAAA;IAAA;IAAA;EAAA;AAAE,CAAC,EAC/B;EAACD,IAAI,EAAC,SAAS;EAACC,OAAO,eAAE,QAAC,UAAU;IAAA;IAAA;IAAA;EAAA;AAAE,CAAC,EACvC;EAACD,IAAI,EAAC,aAAa;EAACC,OAAO,eAAE,QAAC,eAAe;IAAA;IAAA;IAAA;EAAA;AAAE,CAAC,EAChD;EAACD,IAAI,EAAC,aAAa;EAACC,OAAO,eAAE,QAAC,YAAY;IAAA;IAAA;IAAA;EAAA;AAAE,CAAC,EAC7C;EAACD,IAAI,EAAC,kBAAkB;EAACC,OAAO,eAAE,QAAC,aAAa;IAAA;IAAA;IAAA;EAAA;AAAE,CAAC,CACtD,CAAC;AAEF,SAASC,GAAG,GAAG;EACb,oBAAO,QAAC,cAAc;IAAC,MAAM,EAAEH;EAAO;IAAA;IAAA;IAAA;EAAA,QAAE;AAC1C;AAAC,KAFQG,GAAG;AAIZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}